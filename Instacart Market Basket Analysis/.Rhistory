users[, user_orders_not_none_ratio := user_orders_not_none / user_orders]
aux <- up_dt[,.(user_mean_interval = round(mean(up_mean_interval, na.rm = T),2),
user_median_interval = round(median(up_mean_interval, na.rm = T),2),
user_sd_interval = round(sd(up_mean_interval, na.rm = T),2)),
by = .(user_id)]
users <- merge(users, aux, by=("user_id"), all.x = TRUE)
aux <- orders_dt[eval_set != "prior", .(user_id, order_id, eval_set, time_since_last_order = days_since_prior_order)]
users <- merge(users, aux, by=("user_id"), all.x = TRUE)
return(users)
}
database_stat <- function(orders_products_dt, users_dt, up_dt) {
data <- orders_products_dt[, .(up_orders = .N, up_reorders = sum(reordered), up_first_order = min(order_number),
up_last_order = max(order_number),
up_average_cart_position = mean(add_to_cart_order, na.rm = T), up_average_dow = mean(order_dow, na.rm = T),
up_average_hour_of_day = mean(order_hour_of_day, na.rm = T), up_days_since_prior_order = mean(days_since_prior_order, na.rm = T),
up_last_purchased_orders_ago = min(orders_ago), up_first_purchased_orders_ago = max(orders_ago)),
by = .(user_id, product_id)]
data <- merge(data, up_dt[,.(user_id, product_id, up_mean_interval)], by = c("user_id","product_id"), all.x = TRUE)
#  data <- merge(data, products_dt, by = ("product_id"), all=FALSE)
data <- merge(data, users_dt[,.(user_id, user_orders)], by = ("user_id"), all=FALSE)
data[, up_order_rate := up_orders / user_orders]
data[, up_orders_since_last_order := user_orders - up_last_order]
data[, up_order_rate_since_first_order := up_orders / (user_orders - up_first_order + 1)]
data[, user_orders:= NULL]
return(data)
}
get_train_set <- function(data_dt, orders_products_dt, orders_dt) {
train <- merge(data_dt, orders_products_dt[, .(user_id, product_id, reordered)], by = c("user_id", "product_id"), all.x = TRUE)
us <- orders_dt[order_id %in% orders_train_set, .(user_id, order_id, eval_set, time_since_last_order = days_since_prior_order, order_dow, period_of_day, order_hour_of_day)]
train <- merge(train, us, by = ("user_id"), all=FALSE)
train[is.na(reordered), reordered := 0]
return(train)
}
# Load Data ---------------------------------------------------------------
path <- "Data"
aisles <- fread(file.path(path, "aisles.csv"), key = "aisle_id")
departments <- fread(file.path(path, "departments.csv"), key = "department_id")
# Read files and Join ORDER_PRODUCT*
opp <- fread(file.path(path, "order_products__prior.csv"))
opt <- fread(file.path(path, "order_products__train.csv"))
orders <- fread(file.path(path, "orders.csv"))
products <- fread(file.path(path, "products.csv"), key = c("product_id","aisle_id", "department_id"))
# Reshape data ------------------------------------------------------------
aisles[,aisle := as.factor(aisle)]
departments[,department := as.factor(department)]
orders[,eval_set := as.factor(eval_set)]
products[, product_name := as.factor(product_name)]
products <- merge(products, aisles, by = c("aisle_id"), all=FALSE)
products <- merge(products, departments, by = c("department_id"), all=FALSE)
rm(aisles, departments)
orders[order_hour_of_day <= 11,period_of_day := 1]
orders[order_hour_of_day > 11,period_of_day := 2]
orders <- merge(orders, rbindlist(list(opp, opt), use.names=TRUE)[,.(basket_size = .N, basket_size_reordered = sum(reordered)), by = .(order_id)], by = c("order_id"), all.x = TRUE)
orders[order_id == 6]
orders[order_number == 1 & eval_set != "test", basket_size_reordered := 0]
orders[basket_size_reordered == 0, none_order := 1]
orders[basket_size_reordered > 0, none_order := 0]
orders[order_id == 6]
setkey(opp, order_id, product_id)
setkey(opt, order_id, product_id)
prod_list_opp <- opp[ , .(prods = paste(product_id, collapse = ' ')), by = order_id]
prod_list_opt <- opt[ , .(prods = paste(product_id, collapse = ' ')), by = order_id]
orders <- merge(orders, prod_list_opp, by = c("order_id"), all.x = TRUE)
orders[order_id %in% opt[,c(order_id)], prods := prod_list_opt[,c(prods)]]
rm(prod_list_opp)
rm(prod_list_opt)
gc()
setkey(orders,user_id,order_number)
orders[, previous_order := shift(.(order_id),1)][, previous_prods := shift(.(prods),1)]
orders[order_number == 1, previous_order := NA]
orders[order_number == 1, previous_prods := NA]
orders[eval_set != "test" & order_number != 1, f1 := mapply(f1, prods, previous_prods)]
orders[,previous_order := NULL]
orders[,previous_prods := NULL]
orders[,prods := NULL]
write.csv(orders, file = "ordersf1.csv", row.names = F)
varOrders <- setdiff(colnames(orders), c("prods"))
varProducts <- c("department_id", "aisle_id", "product_id")
orders[none_order == 1]
orders[none_order == 1, .N]
orders[none_order == 1 & eval_set == "prior", .N]
orders[none_order == 1 & eval_set == "train", .N]
orders[none_order == 1 & eval_set == "test", .N]
opp
orders
orders[none_order == 1,.N, by = .(user_id)]
orders[none_order == 1 & order_number > 1,.N, by = .(user_id)]
u <- orders[none_order == 1 & order_number > 1,.N, by = .(user_id)]
View(u)
u
u <- orders[none_order == 1 & order_number > 1,.N, by = .(user_id, order_id)]
u <- orders[none_order == 1 & order_number > 1,.(user_id, order_id)]
orders[none_order == 1 & order_number > 1, c(order_id)]
orders[none_order == 1 & order_number > 1 & eval_set == "train", c(order_id)]
none_train <- orders[none_order == 1 & order_number > 1 & eval_set == "train", c(order_id)]
none_prior <- orders[none_order == 1 & order_number > 1 & eval_set == "prior", c(order_id)]
opt[order_id %in% none_train]
opt[order_id %in% none_train, max(add_to_cart_order), by = .(order_id)]
orders[order_id == 719]
orders[order_id == 904]
opt[order_id == 904]
opt[order_id %in% none_train, max(add_to_cart_order)]
opt[order_id %in% none_train, .SD, by = .(order_id)]
opt[order_id %in% none_train, max(add_to_cart_order), by = .(order_id)]
opt[order_id %in% none_train, add_to_cart_order == max(add_to_cart_order), by = .(order_id)]
opt[order_id %in% none_train & add_to_cart_order == max(add_to_cart_order), by = .(order_id)]
opt[order_id %in% none_train, add_to_cart_order == max(add_to_cart_order), by = .(order_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order)), by = .(order_id)]
opt[order_id %in% none_train, .(.SD, last = max(add_to_cart_order)), by = .(order_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order), SD), by = .(order_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order), .SD), by = .(order_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order), product_id), by = .(order_id)]
opt[order_id %in% none_train, .(product_id, last = max(add_to_cart_order)), by = .(order_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order)), by = .(order_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order)), by = .(order_id, product_id)]
opt[order_id %in% none_train, .(last = max(add_to_cart_order)), by = .(order_id)]
opt[order_id %in% none_train, .I[.N], by = .(order_id)]
opt[order_id %in% none_train, .I[.N], by = .(order_id)][[3]]
opt[order_id %in% none_train, .SD[c(1,.N)], by = .(order_id)][[3]]
opt[order_id %in% none_train, .SD[c(1,.N)], by = .(order_id)]
opt[order_id %in% none_train, .SD[order_id == 1], by = .(order_id)]
opt[order_id %in% none_train, .SD[order_id == 719], by = .(order_id)]
opt[order_id %in% none_train, .SD[order_id == 904], by = .(order_id)]
opt[order_id %in% none_train, .SD[order_number == max(add_to_cart_order)], by = .(order_id)]
opt[order_id %in% none_train, .SD[add_to_cart_order == max(add_to_cart_order)], by = .(order_id)]
u <- opt[order_id %in% none_train, .SD[add_to_cart_order == max(add_to_cart_order)], by = .(order_id)]
View(u)
u[product_id := 0]
u[,product_id := 0]
u[, add_to_cart_order := add_to_cart_order + 1]
View(u)
u[, reordered := 1]
?rbindlist
none_train <- orders[none_order == 1 & order_number > 1 & eval_set == "train", c(order_id)]
none_prior <- orders[none_order == 1 & order_number > 1 & eval_set == "prior", c(order_id)]
ax <- opt[order_id %in% none_train, .SD[add_to_cart_order == max(add_to_cart_order)], by = .(order_id)]
ax[, product_id := 0]
ax[, reordered := 1]
rm(u)
gc()
rbindlist(list(opt,ax), use.names=TRUE)
opt <- rbindlist(list(opt,ax), use.names=TRUE)
ax <- opp[order_id %in% none_prior, .SD[add_to_cart_order == max(add_to_cart_order)], by = .(order_id)]
ax[, product_id := 0]
ax[, reordered := 1]
opp <- rbindlist(list(opp,ax), use.names=TRUE)
rm(none_train, none_prior, ax)
gc()
varOrders <- setdiff(colnames(orders), c("prods"))
varProducts <- c("department_id", "aisle_id", "product_id")
opp_expanded <- merge(opp, orders[, varOrders, with=FALSE], by = c("order_id"), all.x = TRUE, sort = FALSE)
rm(opp)
opp_expanded <- merge(opp_expanded, products[, varProducts, with=FALSE], by = ("product_id"), all.x = TRUE, sort = FALSE)
opp_expanded[,":="(orders_ago = max(order_number) - order_number + 1), by = user_id]
opt_expanded <- merge(opt, orders[, varOrders, with=FALSE], by = c("order_id"), all.x = TRUE, sort = FALSE)
rm(opt)
opt_expanded <- merge(opt_expanded, products[, varProducts, with=FALSE], by = ("product_id"), all.x = TRUE, sort = FALSE)
rm(products)
gc()
str(opp_expanded)
str(opt_expanded)
products_stat <- function(orders_products_dt, up_dt, departments_dt, aisles_dt) {
prd <- orders_products_dt[, .(prod_time = .N,
prod_time_p1 = sum(period_of_day == 1),
prod_time_p2 = sum(period_of_day == 2),
prod_reorders = sum(reordered)),
by = .(user_id, product_id, department_id , aisle_id)]
num_users <- orders_products_dt[, length(c(unique(user_id)))]
num_orders <- orders_products_dt[, length(c(unique(order_id)))]
#mean_basket_size
aux <- orders_products_dt[, .(prod_mean_basket_size = mean(basket_size, na.rm = T),
prod_mean_add_to_cart = round(mean(add_to_cart_order, na.rm = T)),
prod_mean_dow = round(mean(order_dow, na.rm = T)),
prod_mean_hour_day = round(mean(order_hour_of_day, na.rm = T)),
),
by = .(product_id)]
prd <- prd[, .(prod_n_orders = sum(prod_time),
prod_n_orders_p1 = sum(prod_time_p1),
prod_n_orders_p2  = sum(prod_time_p2),
prod_n_reorders = sum(prod_reorders),
prod_n_users = .N,
prod_n_users_twice = sum(prod_time >= 2)),
by = .(product_id, department_id , aisle_id)]
prd <- merge(prd, aux,  by = ("product_id"), all.x = TRUE)
prd[, prod_reorder_probability := prod_n_users_twice / prod_n_users]
prd[, prod_reorder_times := 1 + prod_n_reorders / prod_n_users]
prd[, prod_reorder_ratio := prod_n_reorders / prod_n_orders]
prd[, prod_popular_users := prod_n_users / num_users]
prd[, prod_popular_orders := prod_n_orders / num_orders]
#preferred_time
prd[, prod_period_1_ratio := prod_n_orders_p1 / prod_n_orders]
prd[, prod_period_2_ratio := prod_n_orders_p2 / prod_n_orders]
#prefix?
#popularidade por aisle
#popularidade por departamento
#  prd[, c("prod_reorders", "prod_first_orders", "prod_second_orders") := NULL]
#  prd[, c("prod_first_orders") := NULL]
#mean_interval
aux <- up_dt[,.(prod_mean_interval = round(mean(up_mean_interval, na.rm = T),2),
prod_median_interval = round(median(up_mean_interval, na.rm = T),2),
prod_sd_interval = round(sd(up_mean_interval, na.rm = T),2)),
by = .(product_id)]
prd <- merge(prd, aux,  by = ("product_id"), all.x = TRUE)
prd <- merge(prd, departments_dt,  by = ("department_id"), all.x = TRUE)
prd <- merge(prd, aisles_dt,  by = ("aisle_id"), all.x = TRUE)
prd[, prod_popular_aisles_i :=  round(prod_n_orders / ais_num_itens, 2)]
prd[, prod_popular_aisles_o :=  round(prod_n_orders / ais_num_orders, 2)]
prd[, prod_popular_dep_i :=  round(prod_n_orders / dep_num_itens, 2)]
prd[, prod_popular_dep_o :=  round(prod_n_orders / dep_num_orders, 2)]
return(prd)
#  p <- orders_products[product_id < 10,(prod_num = .N), by = .(product_id)]
}
departments_stat <- function(orders_products_dt, up_dt) {
ax_dep <- orders_products_dt[, .(dep_num_itens = .N), by = .(department_id)]
ax_dep_order <- orders_products_dt[, .(total_itens_dep = .N), by = .(order_id, department_id)]
ax_dep <- merge(ax_dep, ax_dep_order[,.(dep_num_orders = .N), by = .(department_id)], by = c("department_id"))
return(ax_dep)
}
aisles_stat <- function(orders_products_dt, up_dt) {
ax_ais <- orders_products_dt[, .(ais_num_itens = .N), by = .(aisle_id)]
ax_ais_order <- orders_products_dt[, .(total_itens_ais = .N), by = .(order_id, aisle_id)]
ax_ais <- merge(ax_ais, ax_ais_order[,.(ais_num_orders = .N), by = .(aisle_id)], by = c("aisle_id"))
return(ax_ais)
}
rm(products)
gc()
up <- fread("up.csv")
aisles_statistics <- aisles_stat(orders_products_dt = opp_expanded, up_dt = up)
View(aisles_statistics)
aisles_stat <- function(orders_products_dt, up_dt) {
ax_ais <- orders_products_dt[product_id != 0, .(ais_num_itens = .N), by = .(aisle_id)]
ax_ais_order <- orders_products_dt[product_id != 0, .(total_itens_ais = .N), by = .(order_id, aisle_id)]
ax_ais <- merge(ax_ais, ax_ais_order[,.(ais_num_orders = .N), by = .(aisle_id)], by = c("aisle_id"))
return(ax_ais)
}
aisles_statistics <- aisles_stat(orders_products_dt = opp_expanded, up_dt = up)
View(aisles_statistics)
departments_stat <- function(orders_products_dt, up_dt) {
ax_dep <- orders_products_dt[product_id != 0, .(dep_num_itens = .N), by = .(department_id)]
ax_dep_order <- orders_products_dt[product_id != 0, .(total_itens_dep = .N), by = .(order_id, department_id)]
ax_dep <- merge(ax_dep, ax_dep_order[product_id != 0,.(dep_num_orders = .N), by = .(department_id)], by = c("department_id"))
return(ax_dep)
}
products_stat <- function(orders_products_dt, up_dt, departments_dt, aisles_dt) {
prd <- orders_products_dt[, .(prod_time = .N,
prod_time_p1 = sum(period_of_day == 1),
prod_time_p2 = sum(period_of_day == 2),
prod_reorders = sum(reordered)),
by = .(user_id, product_id, department_id , aisle_id)]
num_users <- orders_products_dt[, length(c(unique(user_id)))]
num_orders <- orders_products_dt[, length(c(unique(order_id)))]
#mean_basket_size
aux <- orders_products_dt[, .(prod_mean_basket_size = mean(basket_size, na.rm = T),
prod_mean_add_to_cart = round(mean(add_to_cart_order, na.rm = T)),
prod_mean_dow = round(mean(order_dow, na.rm = T)),
prod_mean_hour_day = round(mean(order_hour_of_day, na.rm = T))
),
by = .(product_id)]
prd <- prd[, .(prod_n_orders = sum(prod_time),
prod_n_orders_p1 = sum(prod_time_p1),
prod_n_orders_p2  = sum(prod_time_p2),
prod_n_reorders = sum(prod_reorders),
prod_n_users = .N,
prod_n_users_twice = sum(prod_time >= 2)),
by = .(product_id, department_id , aisle_id)]
prd <- merge(prd, aux,  by = ("product_id"), all.x = TRUE)
prd[, prod_reorder_probability := prod_n_users_twice / prod_n_users]
prd[, prod_reorder_times := 1 + prod_n_reorders / prod_n_users]
prd[, prod_reorder_ratio := prod_n_reorders / prod_n_orders]
prd[, prod_popular_users := prod_n_users / num_users]
prd[, prod_popular_orders := prod_n_orders / num_orders]
#preferred_time
prd[, prod_period_1_ratio := prod_n_orders_p1 / prod_n_orders]
prd[, prod_period_2_ratio := prod_n_orders_p2 / prod_n_orders]
#prefix?
#popularidade por aisle
#popularidade por departamento
#  prd[, c("prod_reorders", "prod_first_orders", "prod_second_orders") := NULL]
#  prd[, c("prod_first_orders") := NULL]
#mean_interval
aux <- up_dt[,.(prod_mean_interval = round(mean(up_mean_interval, na.rm = T),2),
prod_median_interval = round(median(up_mean_interval, na.rm = T),2),
prod_sd_interval = round(sd(up_mean_interval, na.rm = T),2)),
by = .(product_id)]
prd <- merge(prd, aux,  by = ("product_id"), all.x = TRUE)
prd <- merge(prd, departments_dt,  by = ("department_id"), all.x = TRUE)
prd <- merge(prd, aisles_dt,  by = ("aisle_id"), all.x = TRUE)
prd[, prod_popular_aisles_i :=  round(prod_n_orders / ais_num_itens, 2)]
prd[, prod_popular_aisles_o :=  round(prod_n_orders / ais_num_orders, 2)]
prd[, prod_popular_dep_i :=  round(prod_n_orders / dep_num_itens, 2)]
prd[, prod_popular_dep_o :=  round(prod_n_orders / dep_num_orders, 2)]
return(prd)
#  p <- orders_products[product_id < 10,(prod_num = .N), by = .(product_id)]
}
departments_statistics <- departments_stat(orders_products_dt = opp_expanded, up_dt = up)
departments_stat <- function(orders_products_dt, up_dt) {
ax_dep <- orders_products_dt[product_id != 0, .(dep_num_itens = .N), by = .(department_id)]
ax_dep_order <- orders_products_dt[product_id != 0, .(total_itens_dep = .N), by = .(order_id, department_id)]
ax_dep <- merge(ax_dep, ax_dep_order[,.(dep_num_orders = .N), by = .(department_id)], by = c("department_id"))
return(ax_dep)
}
departments_statistics <- departments_stat(orders_products_dt = opp_expanded, up_dt = up)
View(departments_statistics)
departments_stat <- function(orders_products_dt, up_dt) {
ax_dep <- orders_products_dt[product_id != 0, .(dep_num_itens = .N), by = .(department_id)]
ax_dep_order <- orders_products_dt[product_id != 0, .(total_itens_dep = .N), by = .(order_id, department_id)]
ax_dep_user <- orders_products_dt[product_id != 0, .(total_users_dep = .N), by = .(user_id, department_id)]
ax_dep <- merge(ax_dep, ax_dep_order[,.(dep_num_orders = .N), by = .(department_id)], by = c("department_id"))
ax_dep <- merge(ax_dep, ax_dep_user[,.(dep_num_users = .N), by = .(department_id)], by = c("department_id"))
return(ax_dep)
}
departments_statistics <- departments_stat(orders_products_dt = opp_expanded, up_dt = up)
View(departments_statistics)
opp_expanded[department_id == 1, length(unique(c(user_id)))]
opp_expanded[department_id == 1, length(unique(c(order_id)))]
opp_expanded[department_id == 1, length(unique(c(order_id, product_id)))]
opp_expanded[department_id == 1, .N]
aisles_stat <- function(orders_products_dt, up_dt) {
ax_ais <- orders_products_dt[product_id != 0, .(ais_num_itens = .N), by = .(aisle_id)]
ax_ais_order <- orders_products_dt[product_id != 0, .(total_itens_ais = .N), by = .(order_id, aisle_id)]
ax_ais_user <- orders_products_dt[product_id != 0, .(total_users_ais = .N), by = .(user_id, aisle_id)]
ax_ais <- merge(ax_ais, ax_ais_order[,.(ais_num_orders = .N), by = .(aisle_id)], by = c("aisle_id"))
ax_ais <- merge(ax_ais, ax_ais_user[,.(dep_num_users = .N), by = .(aisle_id)], by = c("aisle_id"))
return(ax_ais)
}
aisles_statistics <- aisles_stat(orders_products_dt = opp_expanded, up_dt = up)
View(aisles_statistics)
View(aisles_statistics)
departments_stat <- function(orders_products_dt, up_dt) {
num_users <- orders_products_dt[, length(c(unique(user_id)))]
num_orders <- orders_products_dt[, length(c(unique(order_id)))]
ax_dep <- orders_products_dt[product_id != 0, .(dep_num_itens = .N, dep_num_reorder = sum(reordered)), by = .(department_id)]
ax_dep_order <- orders_products_dt[product_id != 0, .(total_itens_dep = .N), by = .(order_id, department_id)]
ax_dep_user <- orders_products_dt[product_id != 0, .(total_users_dep = .N), by = .(user_id, department_id)]
ax_dep <- merge(ax_dep, ax_dep_order[,.(dep_num_orders = .N), by = .(department_id)], by = c("department_id"))
ax_dep <- merge(ax_dep, ax_dep_user[,.(dep_num_users = .N), by = .(department_id)], by = c("department_id"))
ax_dep[, dep_reorder_ratio := dep_num_reorder / dep_num_itens]
ax_dep[, dep_popular_users := dep_num_users / num_users]
ax_dep[, dep_popular_orders := dep_num_orders / num_orders]
return(ax_dep)
}
departments_statistics <- departments_stat(orders_products_dt = opp_expanded, up_dt = up)
aisles_stat <- function(orders_products_dt, up_dt) {
num_users <- orders_products_dt[, length(c(unique(user_id)))]
num_orders <- orders_products_dt[, length(c(unique(order_id)))]
ax_ais <- orders_products_dt[product_id != 0, .(ais_num_itens = .N, ais_num_reorder = sum(reordered)), by = .(aisle_id)]
ax_ais_order <- orders_products_dt[product_id != 0, .(total_itens_ais = .N), by = .(order_id, aisle_id)]
ax_ais_user <- orders_products_dt[product_id != 0, .(total_users_ais = .N), by = .(user_id, aisle_id)]
ax_ais <- merge(ax_ais, ax_ais_order[,.(ais_num_orders = .N), by = .(aisle_id)], by = c("aisle_id"))
ax_ais <- merge(ax_ais, ax_ais_user[,.(dep_num_users = .N), by = .(aisle_id)], by = c("aisle_id"))
ax_ais[, ais_reorder_ratio := ais_num_reorder / ais_num_itens]
ax_ais[, ais_popular_users := ais_num_users / num_users]
ax_ais[, ais_popular_orders := ais_num_orders / num_orders]
return(ax_ais)
}
aisles_statistics <- aisles_stat(orders_products_dt = opp_expanded, up_dt = up)
aisles_stat <- function(orders_products_dt, up_dt) {
num_users <- orders_products_dt[, length(c(unique(user_id)))]
num_orders <- orders_products_dt[, length(c(unique(order_id)))]
ax_ais <- orders_products_dt[product_id != 0, .(ais_num_itens = .N, ais_num_reorder = sum(reordered)), by = .(aisle_id)]
ax_ais_order <- orders_products_dt[product_id != 0, .(total_itens_ais = .N), by = .(order_id, aisle_id)]
ax_ais_user <- orders_products_dt[product_id != 0, .(total_users_ais = .N), by = .(user_id, aisle_id)]
ax_ais <- merge(ax_ais, ax_ais_order[,.(ais_num_orders = .N), by = .(aisle_id)], by = c("aisle_id"))
ax_ais <- merge(ax_ais, ax_ais_user[,.(ais_num_users = .N), by = .(aisle_id)], by = c("aisle_id"))
ax_ais[, ais_reorder_ratio := ais_num_reorder / ais_num_itens]
ax_ais[, ais_popular_users := ais_num_users / num_users]
ax_ais[, ais_popular_orders := ais_num_orders / num_orders]
return(ax_ais)
}
aisles_statistics <- aisles_stat(orders_products_dt = opp_expanded, up_dt = up)
View(aisles_statistics)
View(departments_statistics)
products_statistics <- products_stat(orders_products_dt = opp_expanded, up_dt = up, departments_statistics, aisles_statistics )
View(products_statistics)
str(products_statistics)
str(opp_expanded)
opp_expanded[user_id == 1]
opp_expanded[user_id == 1 & product_id == 196]
opp_expanded[user_id == 1 & product_id == 196, keyby = .(user_id, order_number)]
opp_expanded[user_id == 1 & product_id == 196,, keyby = .(user_id, order_number)]
opp_expanded[user_id == 1 & product_id == 196,.SD, keyby = .(user_id, order_number)]
up_na <- up_intervals(opp_expanded[product_id <= 10])
up_na <- up_intervals(orders_products_dt = opp_expanded[product_id <= 10])
up_na <- up_intervals(orders_products_dt = opp_expanded[product_id <= 1])
opp_expanded[product_id == 196 & user_id == 1]
opp_expanded[product_id == 196 & user_id == 1, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id)]
opp_expanded[user_id == 1]
opp_expanded[user_id == 1, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id)]
opp_expanded[product_id == 13032 & user_id == 1, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id)]
opp_expanded[product_id == 13032 & user_id == 1, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id, order_number)]
opp_expanded[user_id == 1, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id, order_number)]
opp_expanded[product_id == 0, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id)]
up_intervals <- function(orders_products_dt) {
data <- orders_products_dt[, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id)]
up <- data[up_orders > 1,.(user_id, product_id, up_orders, up_first_order, up_last_order)]
user <- unique(up[,c(user_id)])
for (u in user) {
print(u)
x <- apply(as.matrix(up[user_id == u,.(user_id, up_first_order, up_last_order)]), FUN = teste,1,dt=orders[user_id == u])
up[user_id == u, interval := x]
}
up[, up_mean_interval := round(interval/(up_orders-1),2)]
return(up)
}
up_na <- up_intervals(opp_expanded[product_id == 0])
data <- opp_expanded[product_id == 0, .(up_orders = .N, up_first_order = min(order_number),
up_last_order = max(order_number)), by = .(user_id, product_id)]
up1 <- data[up_orders > 1,.(user_id, product_id, up_orders, up_first_order, up_last_order)]
View(up1)
u1 <- unique(up1[,c(user_id)])
library(data.table)
library(dplyr)
library(tidyr)
# Load Data ---------------------------------------------------------------
path <- "../input"
aisles <- fread(file.path(path, "aisles.csv"))
departments <- fread(file.path(path, "departments.csv"))
orderp <- fread(file.path(path, "order_products__prior.csv"))
ordert <- fread(file.path(path, "order_products__train.csv"))
orders <- fread(file.path(path, "orders.csv"))
products <- fread(file.path(path, "products.csv"))
# Reshape data ------------------------------------------------------------
aisles$aisle <- as.factor(aisles$aisle)
departments$department <- as.factor(departments$department)
orders$eval_set <- as.factor(orders$eval_set)
products$product_name <- as.factor(products$product_name)
products <- products %>%
inner_join(aisles) %>% inner_join(departments) %>%
select(-aisle_id, -department_id)
rm(aisles, departments)
ordert$user_id <- orders$user_id[match(ordert$order_id, orders$order_id)]
orders_products <- orders %>% inner_join(orderp, by = "order_id")
rm(orderp)
gc()
# Products ----------------------------------------------------------------
prd <- orders_products %>%
arrange(user_id, order_number, product_id) %>%
group_by(user_id, product_id) %>%
mutate(product_time = row_number()) %>%
ungroup() %>%
group_by(product_id) %>%
summarise(
prod_orders = n(),
prod_reorders = sum(reordered),
prod_first_orders = sum(product_time == 1),
prod_second_orders = sum(product_time == 2)
)
# Load Data ---------------------------------------------------------------
path <- "Data"
aisles <- fread(file.path(path, "aisles.csv"))
departments <- fread(file.path(path, "departments.csv"))
orderp <- fread(file.path(path, "order_products__prior.csv"))
ordert <- fread(file.path(path, "order_products__train.csv"))
orders <- fread(file.path(path, "orders.csv"))
products <- fread(file.path(path, "products.csv"))
# Reshape data ------------------------------------------------------------
aisles$aisle <- as.factor(aisles$aisle)
departments$department <- as.factor(departments$department)
orders$eval_set <- as.factor(orders$eval_set)
products$product_name <- as.factor(products$product_name)
products <- products %>%
inner_join(aisles) %>% inner_join(departments) %>%
select(-aisle_id, -department_id)
rm(aisles, departments)
ordert$user_id <- orders$user_id[match(ordert$order_id, orders$order_id)]
orders_products <- orders %>% inner_join(orderp, by = "order_id")
rm(orderp)
gc()
# Products ----------------------------------------------------------------
prd <- orders_products %>%
arrange(user_id, order_number, product_id) %>%
group_by(user_id, product_id) %>%
mutate(product_time = row_number()) %>%
ungroup() %>%
group_by(product_id) %>%
summarise(
prod_orders = n(),
prod_reorders = sum(reordered),
prod_first_orders = sum(product_time == 1),
prod_second_orders = sum(product_time == 2)
)
rm(opp_expanded)
rm(opt_expanded)
str(prd)
prd <- orders_products %>%
arrange(user_id, order_number, product_id) %>%
group_by(user_id, product_id) %>%
mutate(product_time = row_number())
prd
str(prd)
prd <- data.table(prd)
rm(prd)
prd <- orders_products %>%
arrange(user_id, order_number, product_id) %>%
group_by(user_id, product_id) %>%
mutate(product_time = row_number()) %>%
ungroup()
str(prd)
prd <- data.table(prd)
prd[user_id == 1]
u1 <- prd[user_id == 1]
View(up1)
View(u1)
setkey(u1,user_id, product_id, product_time)
View(u1)
